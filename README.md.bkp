# üìä kafka-metrics-fetcher
 
The script for extracting MSK usage, it uses MSK permissions to list and describe the clusters only and then 
collects the usage data from CloudWatch. 
 
## üöÄ Installation and Setup
 
### 1Ô∏è‚É£ Clone the Repository
```bash
git clone https://github.com/vamsikrishnags/msk-metrics-fetcher
cd msk-metrics-fetcher
```
 
### 2Ô∏è‚É£ Set Up a Virtual Environment
make sure your have python version is >=3.8
```bash
python3 -m venv venv
source venv/bin/activate
```
 
### 3Ô∏è‚É£ Install Dependencies
```bash
pip3 install -r requirements.txt
```

### üîê Credential Setup
MSK: You can authenticate using long-term credentials or temporary session credentials (via AWS STS).
The script will extract the all clusters usage according to provided account and region

***Note***: Please make sure you specify the AWS_DEFAULT_REGION otherwise the script will throw an error
```bash
export AWS_ACCESS_KEY_ID=your_key
export AWS_SECRET_ACCESS_KEY=your_secret
export AWS_SESSION_TOKEN=your_token     # Optional (if using temporary credentials)
export AWS_DEFAULT_REGION=us-east-1
```

### üîë Required AWS Permissions

To run the script successfully, your IAM user or role must have the following permissions:

#### ‚úÖ Required AWS Services:
- Amazon MSK
- Amazon CloudWatch

#### üîê Minimum IAM Policy Permissions:

```json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "kafka:ListClusters",
        "kafka:ListClustersV2",
        "kafka:DescribeCluster"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ce:GetCostAndUsage"
      ],
      "Resource": "*"
    }
  ]
}
```

### 5Ô∏è‚É£ Run the Script
Execute the script with the configuration file:
```bash
python3 msk_inventory_fetcher_v06_2Jul25_2223.py 
```
 
### 6Ô∏è‚É£ Deactivate the Virtual Environment (When Finished)
```bash
deactivate
```
 
